generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tab {
  id           String   @id @default(cuid())
  songId       Int
  tab          String
  taburl       String   @unique
  contributors String[]
  capo         Int
  tuning       String
  rating       Float
  version      Int
  type         String
  timestamp    String?  @default("2023-05-27T16:51:42.319Z")
  song         Song     @relation(fields: [songId], references: [id])

  @@index([songId])
  @@index([taburl])
}

model Song {
  id     Int    @id @default(autoincrement()) // why is this different to the others
  name   String
  artist String
  Tab    Tab[]
}

model User {
  id            String        @id @default(cuid())
  spotifyUserId String        @unique
  Folder        Folder[]

  @@index([spotifyUserId])
}

model UserTablink {
  id            String  @id @default(cuid())
  // spotifyUserId String
  taburl        String
  folderId        String
  name          String?
  artist        String?
  type          String?
  version       Int?

  // removed because tablink can exist before tab is added to db
  // tab           Tab    @relation(fields: [taburl], references: [taburl])
  // user User @relation(fields: [spotifyUserId], references: [spotifyUserId])
 
  folder Folder @relation(fields: [folderId], references: [id])
  @@unique([taburl, folderId])
}

model Folder {
  id            String @id @default(cuid())
  name          String
  spotifyUserId String
  playlistUrl   String? // only present if playlist was used to create folder
  imageUrl      String?

  user User @relation(fields: [spotifyUserId], references: [spotifyUserId])
  tabs UserTablink[]

  @@unique([name, spotifyUserId])
}
